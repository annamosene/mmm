name: SkyStreaming Scraper

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Run SkyStreaming scraper
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          python update_m3u.py

      - name: Commit and push M3U file
        env:
          ACTIONS_TOKEN: ${{ secrets.ACTIONS_TOKEN }}  # Usa il tuo secret token
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add skystreaming_playlist.m3u
          git commit -m "Aggiornato file M3U con nuovi flussi" || echo "Nessun cambiamento da committare"
          # Configura l'autenticazione con il token personalizzato
          git remote set-url origin https://x-access-token:${{ secrets.ACTIONS_TOKEN }}@github.com/simud/simud.git
          git push
        continue-on-error: truename: SkyStreaming Scraper

on:
  # Trigger manuale
  workflow_dispatch:
  # Opzionale: schedulazione automatica ogni giorno alle 00:00 UTC
  schedule:
    - cron: '0 0 * * *'

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      # Checkout del repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configura Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Puoi modificare la versione se necessario

      # Installa le dipendenze
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      # Esegue lo script Python
      - name: Run SkyStreaming scraper
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          python update_m3u.py

      # Opzionale: Commit e push del file M3U generato
      - name: Commit and push M3U file
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add skystreaming_playlist.m3u
          git commit -m "Aggiornato file M3U con nuovi flussi" || echo "Nessun cambiamento da committare"
          git push
        continue-on-error: true  # Continua anche se non ci sono cambiamenti
