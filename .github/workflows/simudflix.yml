name: StreamingCommunity Scraper

on:
  workflow_dispatch: # Esecuzione manuale
  schedule:
    - cron: '*/15 * * * *' # Esegui ogni 15 minuti, come nel tuo originale

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with custom token
        uses: actions/checkout@v4 # Aggiornato alla versione più recente
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4 # Aggiornato alla versione più recente
        with:
          java-version: '17' # Usiamo JDK 17 per compatibilità con Kotlin e Cloudstream
          distribution: 'temurin'

      - name: Install Gradle
        uses: gradle/gradle-build-action@v3 # Aggiornato alla versione più recente

      - name: Create project structure
        run: |
          mkdir -p src/main/kotlin/it/dogior/hadEnough
          mv scraper.kt src/main/kotlin/it/dogior/hadEnough/scraper.kt || echo "File already in place"
          # Copia i file forniti nella struttura corretta
          mv StreamingCommunity.kt src/main/kotlin/it/dogior/hadEnough/StreamingCommunity.kt || echo "File already in place"
          mv StreamingCommunityExtractor.kt src/main/kotlin/it/dogior/hadEnough/StreamingCommunityExtractor.kt || echo "File already in place"
          mv DataClasses.kt src/main/kotlin/it/dogior/hadEnough/DataClasses.kt || echo "File already in place"

      - name: Create build.gradle
        run: |
          cat << 'EOF' > build.gradle
          plugins {
              id 'org.jetbrains.kotlin.jvm' version '1.9.0'
              id 'application'
          }
          repositories {
              mavenCentral()
          }
          dependencies {
              implementation 'org.jsoup:jsoup:1.15.3'
              implementation 'com.squareup.okhttp3:okhttp:4.10.0'
              implementation 'org.json:json:20230227'
              implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.15.2' // Per parsing JSON
              implementation 'com.lagradost:cloudstream3:3.2.0' // Dipendenza Cloudstream (versione ipotetica)
          }
          application {
              mainClass = 'it.dogior.hadEnough.ScraperKt' // Aggiornato al namespace corretto
          }
          sourceSets {
              main {
                  kotlin {
                      srcDirs = ['src/main/kotlin']
                  }
              }
          }
          EOF

      - name: Build and run Kotlin script
        run: |
          gradle run --stacktrace
        env:
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2g"

      - name: Upload debug files
        uses: actions/upload-artifact@v4
        with:
          name: debug-files
          path: debug/*.html
          if-no-files-found: warn

      - name: Upload network requests
        uses: actions/upload-artifact@v4
        with:
          name: network-requests
          path: network_requests.log
          if-no-files-found: warn

      - name: Upload M3U8 links
        uses: actions/upload-artifact@v4
        with:
          name: m3u8-links
          path: streaming.m3u8
          if-no-files-found: warn

      - name: Commit and push updated M3U8 file
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add streaming.m3u8
          git commit -m "Aggiornato file M3U8 con nuovi flussi" || echo "Nessun cambiamento da committare"
          git push
        continue-on-error: true
