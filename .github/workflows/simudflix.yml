name: StreamingCommunity Scraper

on:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'  # Esegui ogni 15 minuti

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout del repository con il token
      - name: Checkout repository with custom token
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}

      # Step 2: Installa le dipendenze
      - name: Installa dipendenze
        run: |
          python -m pip install --upgrade pip
          pip install streamingcommunity-unofficialapi --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org
          pip install requests

      # Step 3: Visualizza il contenuto di streaming.m3u8 prima dello scraper (per debug)
      - name: Visualizza contenuto del file M3U8 prima dello scraper
        run: cat streaming.m3u8 || echo "Il file streaming.m3u8 non esiste"

      # Step 4: Esegui lo scraper per aggiornare il file M3U8
      - name: Run SkyStreaming scraper
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          python simudflix.py

      # Step 5: Visualizza il contenuto di streaming.m3u8 dopo lo scraper (per debug)
      - name: Visualizza contenuto del file M3U8 dopo lo scraper
        run: cat streaming.m3u8 || echo "Il file streaming.m3u8 non esiste"

      # Step 6: Commit e push del file M3U8 aggiornato
      - name: Commit and push updated M3U8 file
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git pull origin main --rebase  # Esegui il pull prima di fare il push
          
          # Aggiungi il file M3U8 modificato
          git add streaming.m3u8
          
          # Commit delle modifiche
          git commit -m "Aggiornato file M3U8 con nuovi flussi" || echo "Nessun cambiamento da committare"
          
          # Push delle modifiche
          git push origin main
        continue-on-error: true